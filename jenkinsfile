pipeline {
    // 1. Define the agent
    // It's a best practice to use a label for agents that have specific tools installed.
    // This ensures your job only runs on nodes equipped with Trivy.
    // If all your agents have Trivy, you can use 'agent any'.
    agent {
        label 'trivy-agent'
    }
 
    stages {
        // Stage 1: Checkout the source code
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }
 
        // Stage 2: Scan with Trivy and handle results
        stage('Scan Repository with Trivy') {
            steps {
                script {
                    try {
                        echo "Scanning repository for vulnerabilities and misconfigurations..."
                        
                        // 2. Execute Trivy directly on the agent
                        // The 'sh' step will fail if the command returns a non-zero exit code.
                        sh '''
                            trivy fs . \
                                --severity HIGH,CRITICAL \
                                --exit-code 1 \
                                --ignore-unfixed \
                                --format table \
                                --output trivy-scan-report.log
                        '''
                        
                        echo "Trivy scan completed. No HIGH or CRITICAL issues found."
                        
                    } catch (Exception e) {
                        // 3. This block runs if Trivy finds issues and exits with code 1
                        echo "Trivy scan found critical issues or an error occurred. Failing the build."
                        // The 'error' step marks the build as FAILED
                        error "Build failed due to security vulnerabilities found by Trivy."
                        
                    } finally {
                        // 4. Archive the log file
                        // This 'finally' block ensures the report is archived whether the scan passes or fails.
                        echo "Archiving Trivy scan report..."
                        archiveArtifacts artifacts: 'trivy-scan-report.log', allowEmptyArchive: true
                    }
                }
            }
        }
    }
 
    post {
        // 5. Always runs at the end of the pipeline
        always {
            echo "Pipeline finished."
            // Cleans up the workspace for the next build
            cleanWs()
        }
    }
}
