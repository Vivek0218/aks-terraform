pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }

        stage('Trivy File System Scan') {
            steps {
                script {
                    sh """
                        echo "Scanning the checked-out repository using Trivy..."
                        # Scan the current directory for vulnerabilities, misconfigurations, and secrets.
                        trivy fs --scanners vuln,secret,misconfig --severity HIGH,CRITICAL --exit-code 1 --format json -o trivy-report.json .
                    """
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'trivy-report.json', fingerprint: true
                }
            }
        }

        stage('Trivy IaC Scan for AKS Infrastructure') {
            steps {
                script {
                    // Navigate to the directory containing your Terraform files for AKS.
                    // Replace 'terraform/aks' with the actual path to your Terraform configuration.
                    dir('terraform/aks') {
                        sh """
                            echo "Scanning Terraform files for Azure AKS using Trivy IaC scan..."
                            # Initialize Terraform (if not already done in a previous stage)
                            terraform init 

                            # Run Trivy to scan for misconfigurations in the Terraform code.
                            # --severity HIGH,CRITICAL: Fail on High and Critical misconfigurations.
                            # --exit-code 1: Fail the pipeline if High/Critical issues are found.
                            # --format json -o trivy-iac-report.json: Store the results in a JSON file.
                            trivy config --severity HIGH,CRITICAL --exit-code 1 --format json -o trivy-iac-report.json
                        """
                    }
                }
            }
            post {
                always {
                    // Archive the Trivy IaC report for review.
                    archiveArtifacts artifacts: 'terraform/aks/trivy-iac-report.json', fingerprint: true
                }
            }
        }
    }
	post {
        always {
			echo "Pipeline finished."
			cleanWs()	
        }
    }
}
